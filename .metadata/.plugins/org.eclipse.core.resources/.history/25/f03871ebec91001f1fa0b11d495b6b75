package com.cibertec.controller;

import com.cibertec.entity.Paciente;
import com.cibertec.service.JasperReportService;
import com.cibertec.service.PacienteService;
import jakarta.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

@Controller
@RequestMapping("/pacientes")
public class PacienteController {

    @Autowired
    private PacienteService pacienteService;

    @Autowired
    private JasperReportService jasperReportService;

    @GetMapping("/registrar")
    public String mostrarFormularioRegistro(Model model) {
        model.addAttribute("paciente", new Paciente());
        return "registrarPaciente";
    }

    @PostMapping("/registrar")
    public String registrarPaciente(@ModelAttribute("paciente") Paciente paciente, Model model, HttpServletResponse response) {
        // Registrar el paciente
        pacienteService.registrarPaciente(paciente);

        // Verificar que el paciente se registró correctamente
        System.out.println("Paciente registrado: " + paciente);

        // Generar el reporte PDF
        List<Paciente> dataList = new ArrayList<>();
        
        // Crear un objeto Paciente de prueba
        Paciente testPaciente = new Paciente();
        testPaciente.setNombre("Test Nombre");
        testPaciente.setDireccion("Test Dirección");
        testPaciente.setTelefono("123456789");
        testPaciente.setEmail("test@email.com");
        testPaciente.setHistorialOdontologico("Sin problemas");
        testPaciente.setAlergias("Ninguna");
        testPaciente.setTratamientosPrevios("Ninguno");

        dataList.add(testPaciente); // Agregar el paciente de prueba a la lista

        // Verificar el contenido de dataList
        System.out.println("DataList size: " + dataList.size());
        System.out.println("DataList contents: " + dataList);

        try {
            // Generar PDF en el flujo de respuesta
            jasperReportService.exportToPDF(dataList, response);
        } catch (Exception e) {
            e.printStackTrace(); // Manejo de excepciones
            model.addAttribute("error", "Error al generar el reporte PDF."); // Mensaje de error
        }

        // Redirigir a la lista de pacientes
        return "redirect:/pacientes/listar";
    }


    @GetMapping("/historial/{id}")
    public String verHistorial(@PathVariable("id") Long id, Model model) {
        Paciente paciente = pacienteService.obtenerPacientePorId(id);
        model.addAttribute("paciente", paciente);
        return "historialMedico";
    }
    
    @GetMapping("/reporte/{id}")
    public void generarReporte(@PathVariable("id") Long id, HttpServletResponse response) {
        try {
            Paciente paciente = pacienteService.obtenerPacientePorId(id);
            if (paciente != null) {
                System.out.println(paciente); // Verificar que el paciente no es null y tiene datos
                List<Paciente> dataList = new ArrayList<>();
                dataList.add(paciente); // Agregar el paciente a la lista

                jasperReportService.exportToPDF(dataList, response);
            } else {
                response.sendError(HttpServletResponse.SC_NOT_FOUND, "Paciente no encontrado");
            }
        } catch (Exception e) {
            e.printStackTrace(); // Manejo de excepciones
            try {
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Error al generar el reporte");
            } catch (IOException ioException) {
                ioException.printStackTrace();
            }
        }
    }}
